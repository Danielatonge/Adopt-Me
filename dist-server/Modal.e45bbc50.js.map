{"version":3,"sources":["../src/Modal.tsx"],"names":[],"mappings":";AA+Be,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA/Bf,IAAA,EAAA,QAAA,SACA,EAAA,QAAA,aAEA,IAAI,EAEJ,MAAM,EAA2B,EAAG,SAAA,MAClC,EAAY,GAEP,SAAS,eAAe,SACvB,MAAA,GAAiD,EAAO,EAAA,QAAA,MAmB9D,OAjBK,EAAM,UACT,EAAM,QAAU,SAAS,cAAc,SAG/B,EAAA,EAAA,WAAA,KACJ,GAAC,GAAc,EAAM,QAKlB,OAFP,EAAU,YAAY,EAAM,SAErB,KACD,EAAM,SACR,EAAU,YAAY,EAAM,WAG/B,KAEiB,EAAA,EAAA,cAAA,EAAU,EAAM,UAGvB,IAAA,EAAA,EAAA,QAAA,QAAA","file":"Modal.e45bbc50.js","sourceRoot":"../server","sourcesContent":["import { FunctionComponent, MutableRefObject, useEffect, useRef } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nlet modalRoot: HTMLElement;\n\nconst Modal: FunctionComponent = ({ children }) => {\n  modalRoot = modalRoot\n    ? modalRoot\n    : (document.getElementById(\"modal\") as HTMLElement);\n  const elRef: MutableRefObject<HTMLDivElement | null> = useRef(null);\n\n  if (!elRef.current) {\n    elRef.current = document.createElement(\"div\");\n  }\n\n  useEffect(() => {\n    if (!modalRoot || !elRef.current) {\n      return;\n    }\n    modalRoot.appendChild(elRef.current);\n\n    return () => {\n      if (elRef.current) {\n        modalRoot.removeChild(elRef.current);\n      }\n    };\n  }, []);\n\n  return createPortal(children, elRef.current);\n};\n\nexport default Modal;\n"]}