{"version":3,"sources":["Modal.tsx"],"names":[],"mappings":";AA6Be,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA7Bf,IAAA,EAAA,QAAA,SACA,EAAA,QAAA,aAEA,IAAI,EAEJ,MAAM,EAA2B,EAAG,SAAA,MACnC,EAAY,GAAwB,SAAS,eAAe,SACtD,MAAA,GAAiD,EAAO,EAAA,QAAA,MAmB9D,OAjBK,EAAM,UACV,EAAM,QAAU,SAAS,cAAc,SAG9B,EAAA,EAAA,WAAA,KACL,GAAC,GAAc,EAAM,QAKlB,OAFP,EAAU,YAAY,EAAM,SAErB,KACF,EAAM,SACT,EAAU,YAAY,EAAM,WAG5B,KAEiB,EAAA,EAAA,cAAA,EAAU,EAAM,UAGtB,IAAA,EAAA,EAAA,QAAA,QAAA","file":"Modal.053814a0.js","sourceRoot":"../src","sourcesContent":["import { FunctionComponent, MutableRefObject, useEffect, useRef } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nlet modalRoot: HTMLElement;\n\nconst Modal: FunctionComponent = ({ children }) => {\n modalRoot = modalRoot ? modalRoot : document.getElementById(\"modal\");\n const elRef: MutableRefObject<HTMLDivElement | null> = useRef(null);\n\n if (!elRef.current) {\n  elRef.current = document.createElement(\"div\");\n }\n\n useEffect(() => {\n  if (!modalRoot || !elRef.current) {\n   return;\n  }\n  modalRoot.appendChild(elRef.current);\n\n  return () => {\n   if (elRef.current) {\n    modalRoot.removeChild(elRef.current);\n   }\n  };\n }, []);\n\n return createPortal(children, elRef.current);\n};\n\nexport default Modal;\n"]}