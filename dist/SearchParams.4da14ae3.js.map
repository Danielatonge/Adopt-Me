{"version":3,"sources":["useBreedList.js","Pet.js","Results.js","SearchParams.js"],"names":["localCache","useBreedList","animal","breedList","setBreedList","status","setStatus","requestBreedList","res","fetch","json","breeds","Pet","name","breed","images","location","id","hero","length","Results","pets","map","pet","city","state","SearchParams","ANIMALS","setLocation","setAnimal","setBreed","setPets","theme","setTheme","ThemeContext","requestPets","console","log","e","preventDefault","target","value","backgroundColor"],"mappings":"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","file":"SearchParams.4da14ae3.js","sourceRoot":"../src","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst localCache = {};\n\nexport default function useBreedList(animal) {\n const [breedList, setBreedList] = useState([]);\n const [status, setStatus] = useState(\"unloaded\");\n\n useEffect(() => {\n  if (!animal) {\n   setBreedList([]);\n  } else if (localCache[animal]) {\n   setBreedList(localCache[animal]);\n  } else {\n   requestBreedList();\n  }\n  async function requestBreedList() {\n   setBreedList([]);\n   setStatus(\"loading\");\n   const res = await fetch(\n    `http://pets-v2.dev-apis.com/breeds?animal=${animal}`\n   );\n   const json = await res.json();\n   localCache[animal] = json.breeds || [];\n   setBreedList(localCache[animal]);\n   setStatus(\"loaded\");\n  }\n }, [animal]);\n\n return [breedList, status];\n}\n","import { Link } from \"react-router-dom\";\n\nconst Pet = ({ name, animal, breed, images, location, id }) => {\n    let hero = \"http://pets-images.dev-apis.com/pets.none.jpg\";\n    if (images && images.length) {\n        hero = images[0];\n    }\n    return (\n        <Link to={`/details/${id}`} className=\"relative block rounded\">\n            <div className=\"rounded\">\n                <img src={hero} alt={name} className=\"rounded w-full h-full bg-contain bg-no-repeat\"></img>\n            </div>\n            <div className=\"absolute bottom-0 left-0 bg-gradient-to-tr from-white to-transparent p-2\">\n                <h1>{name}</h1>\n                <h2>{`${animal} - ${breed} - ${location}`}</h2>\n            </div>\n        </Link>\n    );\n};\n\nexport default Pet;\n","import Pet from \"./Pet\";\n\nexport default function Results({ pets }) {\n return (\n  <div className=\"grid gap-4 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3\">\n   {!pets.length ? (\n    <h2>No pets found</h2>\n   ) : (\n    pets.map((pet) => (\n     <Pet\n      name={pet.name}\n      animal={pet.animal}\n      breed={pet.breed}\n      images={pet.images}\n      location={`${pet.city}, ${pet.state}`}\n      key={pet.id}\n      id={pet.id}\n     />\n    ))\n   )}\n  </div>\n );\n}\n","import { useState, useEffect, useContext } from \"react\";\n\nimport useBreedList from \"./useBreedList\";\nimport Results from \"./Results\";\nimport ThemeContext from \"./ThemeContext\";\n\nconst ANIMALS = [\"bird\", \"cat\", \"dog\", \"new\"];\n\nconst SearchParams = () => {\n    const [location, setLocation] = useState(\"Innopolis\");\n    const [animal, setAnimal] = useState(\"dog\");\n    const [breed, setBreed] = useState(\"\");\n    const [pets, setPets] = useState([]);\n    const [breeds] = useBreedList(animal);\n    const [theme, setTheme] = useContext(ThemeContext);\n\n    useEffect(() => {\n        requestPets();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const requestPets = async () => {\n        const res = await fetch(\n            `http://pets-v2.dev-apis.com/pets?animal=${animal}&location=${location}&breed=${breed}`\n        );\n        const json = await res.json();\n        console.log(json);\n        setPets(json.pets);\n    };\n    return (\n        <div\n            className=\"my-0 mx-auto w-11/12 \"\n        >\n            <form\n                className=\"p-10 mb-10 rounded-lg bg-gray-200 shadow-lg \n                flex flex-col justify-center items-center divide-y divide-gray-900\"\n\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    requestPets();\n                }}\n            >\n                <label htmlFor=\"location\" className=\"search-label\">\n                    Location\n                    <input\n                        className=\"search-control\"\n                        id=\"location\"\n                        value={location}\n                        placeholder=\"Location\"\n                        onChange={(e) => setLocation(e.target.value)}\n                    />\n                </label>\n                <label htmlFor=\"animal\" value={animal} className=\"search-label\">\n                    Animal\n                    <select\n                        className=\"search-control\"\n                        id=\"animal\"\n                        value={animal}\n                        onChange={(e) => setAnimal(e.target.value)}\n                        onBlur={(e) => setAnimal(e.target.value)}\n                    >\n                        <option />\n                        {ANIMALS.map((animal) => (\n                            <option value={animal} key={animal}>\n                                {\" \"}\n                                {animal}{\" \"}\n                            </option>\n                        ))}\n                    </select>\n                </label>\n                <label htmlFor=\"breed\" value={breed} className=\"search-label\">\n                    Breed\n                    <select\n                        className=\"search-control disabled:opacity-50\"\n                        id=\"breed\"\n                        value={breed}\n                        onChange={(e) => setBreed(e.target.value)}\n                        onBlur={(e) => setBreed(e.target.value)}\n                    >\n                        <option />\n                        {breeds.map((breed) => (\n                            <option value={breed} key={breed}>\n                                {\" \"}\n                                {breed}{\" \"}\n                            </option>\n                        ))}\n                    </select>\n                </label>\n                <label htmlFor=\"theme\" className=\"search-label\" >\n                    Theme\n                    <select\n                        className=\"search-control\"\n                        value={theme}\n                        onChange={(e) => setTheme(e.target.value)}\n                        onBlur={(e) => setTheme(e.target.value)}\n                    >\n                        <option value=\"darkblue\"> Dark Blue</option>\n                        <option value=\"pink\"> Pink </option>\n                    </select>\n                </label>\n                <button className=\"rounded px-6 py-2 text-white hover:opacity-50 border-none\" style={{ backgroundColor: theme }}>Submit</button>\n            </form>\n            <Results pets={pets} />\n        </div>\n    );\n};\n\nexport default SearchParams;\n"]}